%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 4510294d23d964fe59443526f1ca7c4b, type: 3}
  m_Name: Feature Overview_Camera darkens when inside objects
  m_EditorClassIdentifier: 
  m_displayName: Camera darkens when inside objects
  m_hierarchyName: Feature Overview/Camera darkens when inside objects
  m_context: {fileID: 11400000, guid: b05aea44e20f2b44f92707a0633fa98f, type: 2}
  m_markdownFile: {fileID: 0}
  m_priority: 1005
  m_overrideMarkdownText: '# Camera darkens when inside objects

    The camera darkens
    if the user tries to put their head inside a piece of furniture such as the Orrery.
    Initially the use of a Unity <a href="https://docs.unity3d.com/Packages/com.unity.render-pipelines.universal@14.0/manual/Volumes.html">Volume</a>
    (part of the Universal Render Pipeline) was explored. This provided an easy way
    to fade out the majority of visible geometry as the user got closer. Unfortunately
    this approach did not have an effect on the <a href="https://developer.oculus.com/documentation/unity/unity-passthrough/">passthrough</a>
    rendering, since developers can not directly access the passthrough video feed
    for privacy reasons. To overcome this limitation,it was decided to add an additional
    trigger volume using OnTriggerEnter and OnTriggerExit to enable and disable the
    passthrough. This trigger volume is slightly smaller than the fade volume so
    that the passthrough smoothly switches off in the middle of the 3D geometry fading
    effect.



    ### Relevant Files

    - <a href="./Assets/CrypticCabinet/Scripts/Utils/BlackoutVolume.cs">BlackoutVolume.cs</a>


'
  m_overrideMarkdownRoot: .\Documentation/
