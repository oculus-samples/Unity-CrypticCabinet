%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 4510294d23d964fe59443526f1ca7c4b, type: 3}
  m_Name: Feature Overview_Room Setup
  m_EditorClassIdentifier: 
  m_displayName: Room Setup
  m_hierarchyName: Feature Overview/Room Setup
  m_context: {fileID: 11400000, guid: b05aea44e20f2b44f92707a0633fa98f, type: 2}
  m_markdownFile: {fileID: 0}
  m_priority: 1001
  m_overrideMarkdownText: "# Room Setup\n\nThis section explains how to automatically
    populate a generic real-world room with game objects. The <a href=\"https://developers.meta.com/horizon/documentation/unity/unity-scene-overview/\">Scene
    API</a> helps understand the user's space. Using the scene primitives, a 3D grid
    of cells is created to cover the room and track object placement. This system
    detects safe locations for game objects, minimizing overlap with real-world objects.
    Users must set up their scene accurately for the best experience.\n\nFree space
    in the 3D grid appears as green cells, while non-valid locations are red. For
    example, in the image below, the wall has some available space (green), but the
    window is excluded (red). The floor also has red areas under desks and shelving.\n\nNote:
    To visualize the 3D grid in the build, toggle the debug view by holding the left
    joystick and pressing A on the right controller.\n\n![alt text](../Documentation/Images/RoomSetup.png){style=\"width:40%;height:40%\"}\n\nThere
    are four categories of placement locations: \u201Cfloor,\u201D \u201Cwall,\u201D
    \u201Cdesks,\u201D and \u201Cagainst wall.\u201D \u201CAgainst wall\u201D objects
    need to be on the floor and against a wall, like a cabinet. As objects are placed,
    they block the cells they cover to prevent other objects from being placed there.\n\nObjects
    are placed in this order:\n1. Objects on the floor against a wall\n2. Objects
    on walls\n3. Objects on desks (fallback to floor if no desks are available)\n4.
    Objects on the floor\n5. Objects on any horizontal location\n\nWithin each category,
    objects are placed from largest to smallest. If an object can't find a safe location,
    it is placed randomly in a valid location. For example, wall objects stay on
    walls, and floor objects stay on the floor, even if overlapping occurs.\n\nAfter
    automatic placement, there are a few seconds of \u201Ceasing\u201D to allow overlapping
    objects to repel each other. The Unity physics engine function <a href=\"https://docs.unity3d.com/ScriptReference/Physics.ComputePenetration.html\">ComputePenetration</a>
    provides direction and distance to move objects apart. Instead of jumping to
    new locations, the system lerps towards them, allowing multiple objects to move
    over time.\n\nOnce placement is complete, users can preview the layout. Objects
    are visualized as colored boxes:\n- Blue boxes: items that need to be physically
    reached during the experience.\n- Green boxes: items that need to be visible
    but not reached.\n- Red boxes: items in non-valid locations or overlapping with
    other objects.\n\nUsers can manually move these boxes to ensure no red boxes
    and that all blue boxes are reachable.\n\n![alt text](../Documentation/Images/SpawningBoxes.png){style=\"width:50%;height:50%\"}\n\nAfter
    this, users confirm the layout and start the experience. Object positions are
    stored for gameplay to avoid recalculating.\n\n\n### Relevant Files\n- <a href=\"./Assets/CrypticCabinet/Scripts/Utils/ObjectPlacementManager.cs\">ObjectPlacementManager.cs</a>\n-
    <a href=\"./Assets/CrypticCabinet/Scripts/SceneManagement/SceneUnderstandingLocationPlacer.cs\">SceneUnderstandingLocationPlacer.cs</a>\n-
    <a href=\"./Assets/CrypticCabinet/Scripts/SceneManagement/FloorSpaceFinder.cs\">FloorSpaceFinder.cs</a>\n-
    <a href=\"./Assets/CrypticCabinet/Scripts/SceneManagement/WallSpaceFinder.cs\">WallSpaceFinder.cs</a>\n-
    <a href=\"./Assets/CrypticCabinet/Scripts/SceneManagement/DeskSpaceFinder.cs\">DeskSpaceFinder.cs</a>\n\n"
  m_overrideMarkdownRoot: .\Documentation/
